Eamon Tracey
Distributed Systems Assignment 5
-----
GENERAL SUMMARY

I updated the SpreadSheetServer to handle multiple clients concurrently with an event-driven architecture. When the server socket is ready to accept a new connection, it accepts a new connection and adds it to the set of connections. Then, the server polls all active connections to determine those that are ready for reading. It handles one operation from each client whose socket is ready for reading. All sockets are polled using the select system call with a 0 second timeout.

NOTE: I also updated SpreadSheet.py to no longer raise errors on lookup and query if the search area does not exist. Now, in lookup, None is returned. Now, in query, values not in the rectangular spreadsheet are completely ignored.

NOTE: I also updated the client and server sockets to use the TCP_NODELAY option. This diables Nagle's buffering algorithm which massively increases the performance of our spreadsheet server.
-----
RAW OUTPUT OF TestPerf.py

I ran `python3 SpreadSheetServer.py etracey-a5` on student13.cse.nd.edu and multiple simultaneous instances of `python3 TestPerf.py etracey-a5` on student10.cse.nd.edu. The raw outputs and tabular throughput data are detailed below.

ONE CLIENT:
Insert (2500)
    Time (s): 6.22393
    Throughput (ops/s): 401.67558
    Latency (s): 0.00249
Lookup (2500)
    Time (s): 0.43057
    Throughput (ops/s): 5806.25191
    Latency (s): 0.00017
Query (2500)
    Time (s): 11.20637
    Throughput (ops/s): 223.08745
    Latency (s): 0.00448
Remove (2500)
    Time (s): 7.30180
    Throughput (ops/s): 342.38126
    Latency (s): 0.00292
Size (2500)
    Time (s): 0.43693
    Throughput (ops/s): 5721.79105
    Latency (s): 0.00017

TWO CLIENTS:
Insert (2500)
    Time (s): 11.10778
    Throughput (ops/s): 225.06741
    Latency (s): 0.00444
Lookup (2500)
    Time (s): 0.51241
    Throughput (ops/s): 4878.93351
    Latency (s): 0.00020
Query (2500)
    Time (s): 15.58438
    Throughput (ops/s): 160.41708
    Latency (s): 0.00623
Remove (2500)
    Time (s): 11.09596
    Throughput (ops/s): 225.30729
    Latency (s): 0.00444
Size (2500)
    Time (s): 0.47466
    Throughput (ops/s): 5266.91292
    Latency (s): 0.00019
Insert (2500)
    Time (s): 11.23081
    Throughput (ops/s): 222.60202
    Latency (s): 0.00449
Lookup (2500)
    Time (s): 0.42600
    Throughput (ops/s): 5868.59552
    Latency (s): 0.00017
Query (2500)
    Time (s): 15.59088
    Throughput (ops/s): 160.35017
    Latency (s): 0.00624
Remove (2500)
    Time (s): 11.17869
    Throughput (ops/s): 223.63979
    Latency (s): 0.00447
Size (2500)
    Time (s): 0.36337
    Throughput (ops/s): 6879.99559
    Latency (s): 0.00015

THREE CLIENTS:
Insert (2500)
    Time (s): 11.82602
    Throughput (ops/s): 211.39824
    Latency (s): 0.00473
Lookup (2500)
    Time (s): 5.59580
    Throughput (ops/s): 446.76333
    Latency (s): 0.00224
Query (2500)
    Time (s): 15.53846
    Throughput (ops/s): 160.89113
    Latency (s): 0.00622
Remove (2500)
    Time (s): 11.67936
    Throughput (ops/s): 214.05288
    Latency (s): 0.00467
Size (2500)
    Time (s): 5.93218
    Throughput (ops/s): 421.43053
    Latency (s): 0.00237
Insert (2500)
    Time (s): 17.28323
    Throughput (ops/s): 144.64886
    Latency (s): 0.00691
Lookup (2500)
    Time (s): 1.91081
    Throughput (ops/s): 1308.34829
    Latency (s): 0.00076
Query (2500)
    Time (s): 25.21351
    Throughput (ops/s): 99.15320
    Latency (s): 0.01009
Remove (2500)
    Time (s): 11.49097
    Throughput (ops/s): 217.56218
    Latency (s): 0.00460
Size (2500)
    Time (s): 0.73832
    Throughput (ops/s): 3386.08592
    Latency (s): 0.00030
Insert (2500)
    Time (s): 17.39865
    Throughput (ops/s): 143.68929
    Latency (s): 0.00696
Lookup (2500)
    Time (s): 2.63224
    Throughput (ops/s): 949.76106
    Latency (s): 0.00105
Query (2500)
    Time (s): 24.78239
    Throughput (ops/s): 100.87808
    Latency (s): 0.00991
Remove (2500)
    Time (s): 11.45960
    Throughput (ops/s): 218.15766
    Latency (s): 0.00458
Size (2500)
    Time (s): 0.39339
    Throughput (ops/s): 6354.95984
    Latency (s): 0.00016

FOUR CLIENTS:
Insert (2500)
    Time (s): 17.75052
    Throughput (ops/s): 140.84094
    Latency (s): 0.00710
Lookup (2500)
    Time (s): 5.51023
    Throughput (ops/s): 453.70178
    Latency (s): 0.00220
Query (2500)
    Time (s): 24.70266
    Throughput (ops/s): 101.20368
    Latency (s): 0.00988
Remove (2500)
    Time (s): 16.34122
    Throughput (ops/s): 152.98735
    Latency (s): 0.00654
Size (2500)
    Time (s): 5.66728
    Throughput (ops/s): 441.12886
    Latency (s): 0.00227
Insert (2500)
    Time (s): 17.87428
    Throughput (ops/s): 139.86581
    Latency (s): 0.00715
Lookup (2500)
    Time (s): 5.40488
    Throughput (ops/s): 462.54534
    Latency (s): 0.00216
Query (2500)
    Time (s): 24.22984
    Throughput (ops/s): 103.17857
    Latency (s): 0.00969
Remove (2500)
    Time (s): 16.87370
    Throughput (ops/s): 148.15952
    Latency (s): 0.00675
Size (2500)
    Time (s): 5.70270
    Throughput (ops/s): 438.38897
    Latency (s): 0.00228
Insert (2500)
    Time (s): 23.16904
    Throughput (ops/s): 107.90261
    Latency (s): 0.00927
Lookup (2500)
    Time (s): 5.69211
    Throughput (ops/s): 439.20442
    Latency (s): 0.00228
Query (2500)
    Time (s): 35.55142
    Throughput (ops/s): 70.32068
    Latency (s): 0.01422
Remove (2500)
    Time (s): 10.90503
    Throughput (ops/s): 229.25192
    Latency (s): 0.00436
Size (2500)
    Time (s): 0.77723
    Throughput (ops/s): 3216.56282
    Latency (s): 0.00031
Insert (2500)
    Time (s): 23.24587
    Throughput (ops/s): 107.54597
    Latency (s): 0.00930
Lookup (2500)
    Time (s): 6.14475
    Throughput (ops/s): 406.85113
    Latency (s): 0.00246
Query (2500)
    Time (s): 35.17256
    Throughput (ops/s): 71.07813
    Latency (s): 0.01407
Remove (2500)
    Time (s): 11.01289
    Throughput (ops/s): 227.00674
    Latency (s): 0.00441
Size (2500)
    Time (s): 0.57191
    Throughput (ops/s): 4371.29603
    Latency (s): 0.00023

TABULAR:
+--------------------+-----------+---------------------------------------------------+------------------------+
| Concurrent Clients | Operation |                 Throughput (ops/s)                | Throughput Sum (ops/s) |
+--------------------+-----------+------------+------------+------------+------------+------------------------+
|                    | insert    | 401.67558  |            |            |            | 401.67558              |
|                    +-----------+------------+------------+------------+------------+------------------------+
|                    | lookup    | 5806.25191 |            |            |            | 5806.25191             |
|                    +-----------+------------+------------+------------+------------+------------------------+
|          1         | query     | 223.08745  |            |            |            | 223.08745              |
|                    +-----------+------------+------------+------------+------------+------------------------+
|                    | remove    | 342.38126  |            |            |            | 342.38126              |
|                    +-----------+------------+------------+------------+------------+------------------------+
|                    | size      | 5721.79105 |            |            |            | 5721.79105             |
+--------------------+-----------+------------+------------+------------+------------+------------------------+
|                    | insert    | 225.06741  | 222.60202  |            |            | 447.66943              |
|                    +-----------+------------+------------+------------+------------+------------------------+
|                    | lookup    | 4878.93351 | 5868.59552 |            |            | 10,747.52903           |
|                    +-----------+------------+------------+------------+------------+------------------------+
|          2         | query     | 160.41708  | 160.35017  |            |            | 320.76725              |
|                    +-----------+------------+------------+------------+------------+------------------------+
|                    | remove    | 225.30729  | 223.63979  |            |            | 448.94708              |
|                    +-----------+------------+------------+------------+------------+------------------------+
|                    | size      | 5266.91292 | 6879.99559 |            |            | 12,146.90851           |
+--------------------+-----------+------------+------------+------------+------------+------------------------+
|                    | insert    | 211.39824  | 144.64886  | 143.68929  |            | 499.73639              |
|                    +-----------+------------+------------+------------+------------+------------------------+
|                    | lookup    | 446.76333  | 1308.34829 | 949.76106  |            | 2,704.87268            |
|                    +-----------+------------+------------+------------+------------+------------------------+
|          3         | query     | 160.89113  | 99.15320   | 100.87808  |            | 360.92241              |
|                    +-----------+------------+------------+------------+------------+------------------------+
|                    | remove    | 214.05288  | 217.56218  | 218.15766  |            | 649.77272              |
|                    +-----------+------------+------------+------------+------------+------------------------+
|                    | size      | 421.43053  | 3386.08592 | 6354.95984 |            | 10,162.47629           |
+--------------------+-----------+------------+------------+------------+------------+------------------------+
|                    | insert    | 140.84094  | 139.86581  | 107.90261  | 107.54597  | 496.15533              |
|                    +-----------+------------+------------+------------+------------+------------------------+
|                    | lookup    | 453.70178  | 462.54534  | 439.20442  | 406.85113  | 1,762.30267            |
|                    +-----------+------------+------------+------------+------------+------------------------+
|          4         | query     | 101.20368  | 103.17857  | 70.32068   | 71.07813   | 345.78106              |
|                    +-----------+------------+------------+------------+------------+------------------------+
|                    | remove    | 152.98735  | 148.15952  | 229.25192  | 227.00674  | 757.40553              |
|                    +-----------+------------+------------+------------+------------+------------------------+
|                    | size      | 441.12886  | 438.38897  | 3216.56282 | 4371.29603 | 8,467.37668            |
+--------------------+-----------+------------+------------+------------+------------+------------------------+

-----
DISCUSSION OF RESULTS

The throughput data above shows that concurrent client-handling can increase total operation throughput. From each individual client's perspective, the server is slower when multiple clients are connected. This is because the server is dedicating time to all clients between operation requests, so each client may wait longer until its request is served. However, from the server's perspective, the total throughput is roughly equal to the sum of the throughputs of the simultaneous clients. It is less likely now that the server stalls when multiple clients are connected because there is typically a high chance that at least one of the connected clients has sent a request.

As the number of clients incerease, the throughput from each individual client decreases but the throughput sum tends to increase. Due to the way my TestPerf.py is written, it is quite probabilistic how the throughput sum for each operation changes. The data mostly depends on the communication speed between each client and server. Still, we see the general trend that total throughput can increase. For example, total throughput for the lookup operatoin with 1 client was 5806 ops/s, and this value became 10,747 ops/s with 2 clients.

Remember, though, that concurrent client-handling does not increase the raw speed at which the spreadsheet server can perform each operation. There is still a maximum speed at which the server can handle any given request. This means that as the client load increases, the server will asymptotically approach a total throughput limit. At this point, the server will have achieved maximum total throughput and the addition of new clients will only decrease the perceived throughput by each individual client.

Therefore, we conclude that concurrent client-handling may increase total throughput but only up to some client load threshold.
